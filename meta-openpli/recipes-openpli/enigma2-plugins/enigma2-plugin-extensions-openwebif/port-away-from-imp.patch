diff --git a/plugin/controllers/base.py b/plugin/controllers/base.py
index 1e42b87d..876805af 100644
--- a/plugin/controllers/base.py
+++ b/plugin/controllers/base.py
@@ -22,7 +22,8 @@
 
 from __future__ import print_function
 import os
-import imp
+import importlib.util
+import importlib.machinery
 import json
 import six
 
@@ -117,14 +118,19 @@ class BaseController(resource.Resource):
 		request.write(b"<html><head><title>OpenWebif</title></head><body><h1>Error 404: Not found</h1><br>The requested page doesn't exist.</body></html>")
 		request.finish()
 
+	def load_source(self, modname, filename):
+		loader = importlib.machinery.SourceFileLoader(modname, filename)
+		spec = importlib.util.spec_from_file_location(modname, filename, loader=loader)
+		module = importlib.util.module_from_spec(spec)
+		# The module is always executed and not cached in sys.modules.
+		# Uncomment the following line to cache the module.
+		# sys.modules[module.__name__] = module
+		loader.exec_module(module)
+		return module
+
 	def loadTemplate(self, path, module, args):
-		if fileExists(getViewsPath(path + ".py")) or fileExists(getViewsPath(path + ".pyo")) or fileExists(getViewsPath(path + ".pyc")):
-			if fileExists(getViewsPath(path + ".pyo")):
-				template = imp.load_compiled(module, getViewsPath(path + ".pyo"))
-			elif fileExists(getViewsPath(path + ".pyc")):
-				template = imp.load_compiled(module, getViewsPath(path + ".pyc"))
-			else:
-				template = imp.load_source(module, getViewsPath(path + ".py"))
+		if fileExists(getViewsPath(path + ".py")):
+			template = self.load_source(module, getViewsPath(path + ".py"))
 			mod = getattr(template, module, None)
 			if callable(mod):
 				return str(mod(searchList=args))
diff --git a/plugin/httpserver.py b/plugin/httpserver.py
index 4fba811d..3a43d6df 100644
--- a/plugin/httpserver.py
+++ b/plugin/httpserver.py
@@ -31,6 +31,7 @@ from twisted.web import server, http, resource
 from twisted.internet.error import CannotListenError
 
 from Plugins.Extensions.OpenWebif.controllers.root import RootController
+from Plugins.Extensions.OpenWebif.controllers.base import BaseController
 from Plugins.Extensions.OpenWebif.sslcertificate import SSLCertificateGenerator, KEY_FILE, CERT_FILE, CA_FILE, CHAIN_FILE
 from socket import has_ipv6
 from OpenSSL import SSL
@@ -38,7 +39,6 @@ from OpenSSL import crypto
 from Components.Network import iNetwork
 
 import os
-import imp
 import ipaddress
 import six
 
@@ -158,11 +158,7 @@ def buildRootTree(session):
 					continue
 
 				loaded.append(modulename)
-				try:
-					imp.load_source(modulename, origwebifpath + "/WebChilds/External/" + modulename + ".py")
-				except Exception as e:
-					# maybe there's only the compiled version
-					imp.load_compiled(modulename, origwebifpath + "/WebChilds/External/" + external)
+				BaseController.load_source(modulename, origwebifpath + "/WebChilds/External/" + modulename + ".py")
 
 		if len(loaded_plugins) > 0:
 			for plugin in loaded_plugins:
